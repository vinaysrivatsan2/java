/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FurnitureMakerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.FurnitureMakingOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DeliveryRequest;
import Business.WorkQueue.FurnitureMakingRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

import userinterface.SupplyandDemandRole.FurnitureRequestJPanel;

/**
 *
 * @author raunak
 */
public class FurnitureMakerWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private FurnitureMakingOrganization FurnitureMakingOrganization;
     private Enterprise enterprise;
     private EcoSystem business;
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public FurnitureMakerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account,Organization organization, EcoSystem business,Enterprise enterprise) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.FurnitureMakingOrganization = (FurnitureMakingOrganization)organization;
        this.business = business;
        this.enterprise=enterprise; 
        populateRequestTable();
    }
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : FurnitureMakingOrganization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[12];
            row[0] = request;
            row[1]= request.getOrder();
            row[2]=request.getPhoneNumber();
            row[3]=request.getAddress();
            row[4]= request.getFurnitureType();
            row[5]=request.getWoodType();
            row[6] = request.getQuantity();
            row[7] = request.getDimension();
            row[8] = request.getSender().getEmployee().getName();
            row[9] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[10] = request.getStatus();
            
            row[11]=request.getRequestDate();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 252, 241));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setBackground(new java.awt.Color(31, 40, 51));
        workRequestJTable.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        workRequestJTable.setForeground(new java.awt.Color(255, 255, 255));
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Order Number", "Phone Number", " Delivery Address", "Furniture Type", "Wood Type", "Quantity", "Dimensions", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(8).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(9).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(10).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 1020, 250));

        assignJButton.setBackground(new java.awt.Color(31, 40, 51));
        assignJButton.setFont(new java.awt.Font("Georgia", 2, 12)); // NOI18N
        assignJButton.setForeground(new java.awt.Color(255, 255, 255));
        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 460, -1, 40));

        processJButton.setBackground(new java.awt.Color(31, 40, 51));
        processJButton.setFont(new java.awt.Font("Georgia", 2, 12)); // NOI18N
        processJButton.setForeground(new java.awt.Color(255, 255, 255));
        processJButton.setText("Process");
        processJButton.setEnabled(false);
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 460, -1, 40));

        refreshJButton.setBackground(new java.awt.Color(31, 40, 51));
        refreshJButton.setFont(new java.awt.Font("Georgia", 2, 12)); // NOI18N
        refreshJButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 100, -1, 30));

        enterpriseLabel.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        enterpriseLabel.setText("Furniture Maker Work Area");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 250, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed
        
        int selectedRow = workRequestJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"No Order Selected!!");
            
            return;
        }
        
        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateRequestTable();
        processJButton.setEnabled(true);
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
        
        
         int selectedRow = workRequestJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"No Order Selected!!");
            return;
        }
        
        FurnitureMakingRequest request = (FurnitureMakingRequest)workRequestJTable.getValueAt(selectedRow, 0);
     
        request.setStatus("Furniture making in Progress");
        processJButton.setEnabled(false);
        //DeliveryRequestJPanel processWorkRequestJPanel = new DeliveryRequestJPanel(userProcessContainer, request,userAccount,enterprise);
        userProcessContainer.add("DeliveryRequestJPanel", new DeliveryRequestJPanel(userProcessContainer,request,userAccount,enterprise));
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateRequestTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
