/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageFlights;

import Business.Airliner.Airliner;
import Business.Airliner.Flight;
import Business.Airliner.FlightSchedule;
import Business.TravelAgency.TravelAgency;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author vaibhavdhoke
 */
public class ManageFlightJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFlightJPanel
     */
    private JPanel container;
    private TravelAgency travelAgency;
    public ManageFlightJPanel(JPanel container,TravelAgency travelAgency) {
        initComponents();
        this.container=container;
        this.travelAgency=travelAgency;
        
        populateCombo();
        
    }
    
    
     public void populateCombo(){
        List<Airliner> airlinerList = new ArrayList<>();
        airlinerList =  travelAgency.getAirlinerDirectory().getAirlinerList();
        
        for(Airliner l:airlinerList){
            comboAirliner.addItem(l.getAirlinerName());
        }
    }
    

    public void populate(List<Flight> f){
        DefaultTableModel dtm= (DefaultTableModel)tblflight.getModel();
        dtm.setRowCount(0);
        /*List<Flight> fl = new ArrayList();
        List<Integer> priceList= new ArrayList<>();
        for(int i=0;i<f.size();i++){
            priceList.add(f.get(i).getPrice());
        }
        Collections.sort(priceList);
        System.out.println(priceList);
        for(int i=0;i<priceList.size();i++){
            for(int j=0;j<f.size();j++){
                if(priceList.get(i)==f.get(i).getPrice()){
                fl.add(f.get(i));
                }
            }
        }*/
        
        Collections.sort(f, new Comparator<Flight>() {
        @Override
        public int compare(Flight o1, Flight o2) {
        return o1.getPrice().compareTo(o2.getPrice());
        }
        });
        
        
            for(int i=0;i<f.size();i++){
                Object[] row = new Object[7];
                row[0] = f.get(i);
                row[1] = f.get(i).getAirplane().getPlaneNumber();
                row[2] = f.get(i).getLocationFrom();
                row[3] = f.get(i).getLocationTo();
                row[4] = f.get(i).getDate();
                if(f.get(i).isCancelled()==true){
                    row[5] = "Cancelled";
                }else if(f.get(i).isCancelled()==false){
                    row[5] = "Ontime";
                }
                row[6] =f.get(i).getPrice();
                dtm.addRow(row);
            }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboAirliner = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblflight = new javax.swing.JTable();
        btnCheckFlight = new javax.swing.JButton();
        btnAddFlight = new javax.swing.JButton();
        btnUpdateFlight = new javax.swing.JButton();

        setBackground(new java.awt.Color(203, 238, 249));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Manage Flights");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("Airliner:");

        comboAirliner.setBackground(new java.awt.Color(153, 153, 153));
        comboAirliner.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));

        tblflight.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Airliner Name", "Aircraft", "Source", "Destination", "Date", "Status", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblflight);
        if (tblflight.getColumnModel().getColumnCount() > 0) {
            tblflight.getColumnModel().getColumn(0).setResizable(false);
            tblflight.getColumnModel().getColumn(1).setResizable(false);
            tblflight.getColumnModel().getColumn(2).setResizable(false);
            tblflight.getColumnModel().getColumn(3).setResizable(false);
            tblflight.getColumnModel().getColumn(4).setResizable(false);
            tblflight.getColumnModel().getColumn(5).setResizable(false);
            tblflight.getColumnModel().getColumn(6).setResizable(false);
        }

        btnCheckFlight.setBackground(new java.awt.Color(153, 255, 255));
        btnCheckFlight.setText("Check Flights");
        btnCheckFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckFlightActionPerformed(evt);
            }
        });

        btnAddFlight.setBackground(new java.awt.Color(0, 204, 204));
        btnAddFlight.setText("Add Flight");
        btnAddFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFlightActionPerformed(evt);
            }
        });

        btnUpdateFlight.setBackground(new java.awt.Color(0, 204, 204));
        btnUpdateFlight.setText("Update Flight");
        btnUpdateFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateFlightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(361, 361, 361))
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpdateFlight)
                        .addGap(18, 18, 18)
                        .addComponent(btnAddFlight))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(comboAirliner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCheckFlight))
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(comboAirliner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addComponent(btnCheckFlight))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddFlight)
                    .addComponent(btnUpdateFlight))
                .addContainerGap(280, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckFlightActionPerformed
        // TODO add your handling code here:
        if(comboAirliner.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null,"Please select Airliner");
            return;
        }
        
        int selectedRow = tblflight.getSelectedRow();
        String selAirliner= String.valueOf(comboAirliner.getSelectedItem());
        List<Flight> tempList = new ArrayList<>();
        List<Airliner> al =travelAgency.getAirlinerDirectory().getAirlinerList();
        
        for(Airliner a:al){
            if(a.getAirlinerName().equalsIgnoreCase(selAirliner)){
                List<Flight> fs = a.getFlightSchedule().getFlightSchedule();
                for(int i=0;i<fs.size();i++){
                    tempList.add(fs.get(i));
                }
            }
        }
        populate(tempList);
        tempList.clear();
        
        
    }//GEN-LAST:event_btnCheckFlightActionPerformed

    private void btnAddFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFlightActionPerformed
        // TODO add your handling code here:
       
        String selAirliner= String.valueOf(comboAirliner.getSelectedItem());
        if(comboAirliner.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null,"Please select Airliner");
            return;
        }
        
        List<Flight> tempList = new ArrayList<>();
        List<Airliner> al =travelAgency.getAirlinerDirectory().getAirlinerList();
        Airliner airl= new Airliner();
        for(Airliner a:al){
            if(a.getAirlinerName().equalsIgnoreCase(selAirliner)){
                airl=a;
            }
        }
        
        
        AddFlightJPanel addFlightJPanel = new AddFlightJPanel(container,airl);
        container.add("AddFlightJPanel",addFlightJPanel);
        CardLayout layout=(CardLayout) container.getLayout();
        layout.next(container);
        
    }//GEN-LAST:event_btnAddFlightActionPerformed

    private void btnUpdateFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateFlightActionPerformed
        // TODO add your handling code here:
        
        
        int selectedRow = tblflight.getSelectedRow();
        
        if(comboAirliner.getSelectedIndex()==0){
        JOptionPane.showMessageDialog(null,"Please select the Airliner");
        return;
        }
        
        if(selectedRow<0){
        JOptionPane.showMessageDialog(null,"Please select the Flight");
        return;
        }
        
        
        String selAirliner= String.valueOf(comboAirliner.getSelectedItem());
        List<Flight> tempList = new ArrayList<>();
        List<Airliner> al =travelAgency.getAirlinerDirectory().getAirlinerList();
        Airliner airl= new Airliner();
        for(Airliner a:al){
            if(a.getAirlinerName().equalsIgnoreCase(selAirliner)){
                airl=a;
            }
        }
        
        Flight flight = (Flight)tblflight.getValueAt(selectedRow, 0);
        
        
        UpdateFlightJPanel updateFlightJPanel = new UpdateFlightJPanel(container, airl,flight);
        container.add("UpdateFlightJPanel",updateFlightJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
        
        
    }//GEN-LAST:event_btnUpdateFlightActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFlight;
    private javax.swing.JButton btnCheckFlight;
    private javax.swing.JButton btnUpdateFlight;
    private javax.swing.JComboBox<String> comboAirliner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblflight;
    // End of variables declaration//GEN-END:variables
}
