/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.BookTicket;

import Business.Airliner.Airliner;
import Business.Airliner.FlightSchedule;
import javax.swing.JPanel;
import Business.Airliner.Flight;
import Business.Airliner.Seat;
import Business.Customer.Customer;
import Business.TravelAgency.MasterTravelSchedule;
import Business.TravelAgency.TravelAgency;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashSet;
import java.util.Iterator;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Surya
 */
public class MasterSchedule extends javax.swing.JPanel {

    /**
     * Creates new form masterSchedule
     */
    private JPanel container;
    private TravelAgency travelAgency ;
    public MasterSchedule(JPanel container,TravelAgency travelAgency ) {
    initComponents();
    this.container= container;
    this.travelAgency= travelAgency;
    populateCombo();
    
    List<Flight> fm= new ArrayList<>();
    List<FlightSchedule> fs=travelAgency.getMasterTravelSchedule().getMasterFlightSchedule();
        for(int i=0;i<fs.size();i++){
            List<Flight> fl =fs.get(i).getFlightSchedule();
            for(Flight f:fl){
                String from=f.getLocationFrom();
                String to= f.getLocationTo();
                String al =f.getAirplane().getAirlinerName();
                Integer price=f.getPrice();
                fm.add(f);
            }
        }
    populate(fm);
    }
    
    
    
    public void populateCombo(){
        List<Airliner> airlinerList = new ArrayList<>();
        airlinerList =  travelAgency.getAirlinerDirectory().getAirlinerList();
        
        for(Airliner l:airlinerList){
            comboAirliner.addItem(l.getAirlinerName());
        }
        
        List<FlightSchedule> schList = travelAgency.getMasterTravelSchedule().getMasterFlightSchedule();
        Flight flight = new Flight();
        HashSet<String> source=new HashSet<String>(); 
        HashSet<String> destination=new HashSet<String>();
        for(int i=0;i<schList.size();i++){
           List<Flight> fl = schList.get(i).getFlightSchedule(); 
           for(Flight f:fl){
               source.add(f.getLocationFrom());
               destination.add(f.getLocationTo());
           }
        }
        
        Iterator<String> sr=source.iterator(); 
        Iterator<String> d= destination.iterator();
        while(sr.hasNext()){  
            comboSource.addItem(sr.next());
        }
        while(d.hasNext()){  
            comboDestination.addItem(d.next());
        }     
    
    }
    
    public void populate(List<Flight> f){
        
        DefaultTableModel dtm= (DefaultTableModel)tblMasterSchedule.getModel();
        dtm.setRowCount(0);
        
        Collections.sort(f, new Comparator<Flight>() {
        @Override
        public int compare(Flight o1, Flight o2) {
        return o1.getPrice().compareTo(o2.getPrice());
        }
        });
        
            for(int i=0;i<f.size();i++){
                Object[] row = new Object[5];
                row[0] = f.get(i);
                row[1] = f.get(i).getLocationFrom();
                row[2] = f.get(i).getLocationTo();
                row[3] = f.get(i).getDate();
                row[4] = f.get(i).getPrice();
                dtm.addRow(row);
            }
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMasterSchedule = new javax.swing.JTable();
        nextBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        boxSeat = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtCName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comboDestination = new javax.swing.JComboBox<>();
        comboSource = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        comboAirliner = new javax.swing.JComboBox<>();
        btncheckFlights = new javax.swing.JButton();

        setBackground(new java.awt.Color(203, 238, 249));

        tblMasterSchedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airliner ", "From ", "Destination", "Date ", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMasterSchedule);
        if (tblMasterSchedule.getColumnModel().getColumnCount() > 0) {
            tblMasterSchedule.getColumnModel().getColumn(0).setResizable(false);
            tblMasterSchedule.getColumnModel().getColumn(1).setResizable(false);
            tblMasterSchedule.getColumnModel().getColumn(2).setResizable(false);
            tblMasterSchedule.getColumnModel().getColumn(3).setResizable(false);
            tblMasterSchedule.getColumnModel().getColumn(4).setResizable(false);
        }

        nextBtn.setText("Book Ticket");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Customer Name:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        jLabel3.setText("Master Travel Schedule");

        boxSeat.setBackground(new java.awt.Color(204, 204, 204));
        boxSeat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Seat Number:");

        txtCName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCNameActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Age:");

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh Seats");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Depart From:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("Going To");

        comboDestination.setBackground(new java.awt.Color(204, 204, 204));
        comboDestination.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please select" }));

        comboSource.setBackground(new java.awt.Color(204, 204, 204));
        comboSource.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please select" }));
        comboSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSourceActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setText("Airliner:");

        comboAirliner.setBackground(new java.awt.Color(204, 204, 204));
        comboAirliner.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please select" }));

        btncheckFlights.setText("Best Flights");
        btncheckFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncheckFlightsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(248, 248, 248))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btncheckFlights)
                    .addComponent(btnRefresh)
                    .addComponent(nextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(46, 46, 46)
                                .addComponent(comboSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCName, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(34, 34, 34)
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(boxSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboAirliner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel3)
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(boxSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCName, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRefresh)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7)
                    .addComponent(comboAirliner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btncheckFlights)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(nextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        // TODO add your handling code here:
        
        if(!txtCName.getText().matches("^[A-Za-z]+((\\s)?([A-Za-z])+)*$")||txtCName.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Please enter a valid Customer Name");
            return;
        }
        
        if(!txtAge.getText().matches("^[0-9]*$")||txtAge.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Please enter a valid value for Age");
            return;
        }
        if(comboSource.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null,"Please select Source/Depart From");
            return;
        }
        if(comboDestination.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null,"Please select Destination/Going to");
            return;
        }
        if(comboAirliner.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null,"Please select Airliner");
            return;
        }
        
        if(boxSeat.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null,"Please select Seat");
            return;
        }
        
        
        
        int selectedRow = tblMasterSchedule.getSelectedRow();
        String selSeat= String.valueOf(boxSeat.getSelectedItem());
        Customer c= new Customer();
        String name= txtCName.getText();
        Integer age = Integer.parseInt(txtAge.getText());
        if(selectedRow>=0){
        Flight flight = (Flight) tblMasterSchedule.getValueAt(selectedRow, 0);
        c=travelAgency.getTravelOffice().getCustomerDirectory().addCustomer(name, age, selSeat, flight);
        }else {
            JOptionPane.showMessageDialog(null, "Select a flight");
        }
        
        BookingDetails bookingdetails= new BookingDetails(container, c,selSeat);
        container.add("BookingDetails",bookingdetails);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
        
        txtCName.setText(null);
        txtAge.setText(null);
        boxSeat.removeAllItems();
       
        
    }//GEN-LAST:event_nextBtnActionPerformed

    private void txtCNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCNameActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMasterSchedule.getSelectedRow();
        
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select the flight");
        }
        if(selectedRow>=0){
            Flight flight = (Flight) tblMasterSchedule.getValueAt(selectedRow, 0);
            List<Seat> seatList = new ArrayList<>();
            boxSeat.removeAllItems();
            seatList= flight.displayAvailableSeats();
            for(Seat s:seatList){
                boxSeat.addItem(s.getActualSeat());
            }
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void comboSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSourceActionPerformed
        // TODO add your handling code here
    }//GEN-LAST:event_comboSourceActionPerformed

    private void btncheckFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncheckFlightsActionPerformed
        // TODO add your handling code here:
        
        if(comboSource.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null,"Please select Source/Depart From");
            return;
        }
        if(comboDestination.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null,"Please select Destination/Going to");
            return;
        }
        if(comboAirliner.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null,"Please select Airliner");
            return;
        }
         String source= String.valueOf(comboSource.getSelectedItem());
        String destination = String.valueOf(comboDestination.getSelectedItem());
        String airliner = String.valueOf(comboAirliner.getSelectedItem());
        
        List <Flight> searchList = new ArrayList<>();
        List<FlightSchedule> fs=travelAgency.getMasterTravelSchedule().getMasterFlightSchedule();
        for(int i=0;i<fs.size();i++){
            List<Flight> fl =fs.get(i).getFlightSchedule();
            for(Flight f:fl){
                String from=f.getLocationFrom();
                String to= f.getLocationTo();
                String al =f.getAirplane().getAirlinerName();
                if(from.equalsIgnoreCase(source) && to.equalsIgnoreCase(destination) && al.equalsIgnoreCase(airliner)){
                    searchList.add(f);
                }
            }
        }
        
        if(searchList.size()==0){
            JOptionPane.showMessageDialog(null, "We dont have such flights");        
        }
        
        populate(searchList);
        searchList.clear();
        
    }//GEN-LAST:event_btncheckFlightsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxSeat;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btncheckFlights;
    private javax.swing.JComboBox<String> comboAirliner;
    private javax.swing.JComboBox<String> comboDestination;
    private javax.swing.JComboBox<String> comboSource;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nextBtn;
    private javax.swing.JTable tblMasterSchedule;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCName;
    // End of variables declaration//GEN-END:variables
}
